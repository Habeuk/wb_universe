<?php

/**
 * Use this fonction on module to alert meta data
 * mymodule_page_attachments_alter(array &$page)
 *
 * @param array $variables
 */
function wb_universe_preprocess_html(&$variables) {
  $_css = [];
  $uid = \Drupal::currentUser()->id();
  if ($uid && \Drupal\user\Entity\User::load($uid)->hasRole('administrator')) {
    $_css[] = 'administrator';
  }
  // Add.
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  if ($variables['is_front']) {
    $_css[] = 'front-page';
  }
  else {
    $_css[] = 'not-front-page';
  }
  if (!empty($_css)) {
    $variables['html_attributes']->setAttribute('class', $_css);
  }
  if ($IdAnalytique = theme_get_setting('google-analytics-gtag')) {
    $scriptUrl = [
      '#tag' => 'script',
      '#attributes' => [
        'async',
        'src' => 'https://www.googletagmanager.com/gtag/js?id=' . $IdAnalytique
      ]
    ];
    $scriptInit = [
      '#tag' => 'script',
      '#value' => "window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              gtag('js', new Date());
              gtag('config', '$IdAnalytique');
            "
    ];
    $variables['page']['#attached']['html_head'][] = [
      $scriptUrl,
      'google-analytics-gtag'
    ];
    $variables['page']['#attached']['html_head'][] = [
      $scriptInit,
      'google-analytics-gtag-value'
    ];
  }
  // Ajout du script pour skripe v3 ( on doit mettre une variable pour
  // conditionner l'affichage et gerer la version ).
  $scriptStripe = [
    '#tag' => 'script',
    '#attributes' => [
      'async' => "async",
      'src' => 'https://js.stripe.com/v3/'
    ]
  ];
  $variables['page']['#attached']['html_head'][] = [
    $scriptStripe,
    'stripe-api-js'
  ];
}

/**
 * implement hook_page_attachments_alter
 *
 * @param array $attachments
 */
function wb_universe_page_attachments_alter(array &$attachments) {
  $stripe_settings = theme_get_setting('stripe_settings');
  $general_settings = theme_get_setting('general_settings');
  if (!empty($general_settings['load_bootstrap'])) {
    $attachments["#attached"]["library"][] = "wb_universe/bootstrap_default";
  }
  if (!empty($stripe_settings['load_stripe'])) {
    $attachments["#attached"]["library"][] = "wb_universe/stripe_v3";
  }
}

/**
 * Formatage des champs.
 *
 * @param array $variables
 */
function wb_universe_preprocess_field(&$variables) {
  /**
   * Class for type boolean.
   */
  if (isset($variables['element']['#field_type']) && $variables['element']['#field_type'] == 'boolean') {
    $value = $variables['element']['#object']->get($variables['field_name'])->getValue();
    if (!empty($value[0])) {
      $variables['attributes']['class'][] = 'boolean-' . $value[0]['value'];
    }
  }
  /**
   * for link
   * Pour ces derniers on doit recuperer la css definie au niveau du
   * content_attributes ( add by formatage_models ) et ajouter au niveau de la
   * balise <a>.
   */
  elseif ($variables['field_type'] == 'link') {
    if ($variables['content_attributes'])
      foreach ($variables['items'] as &$value) {
        if (!empty($value['attributes'])) {
          if (!empty($value['content']['#options']['attributes'])) {
            if (is_array($value['content']['#options']['attributes'])) {
              if (empty($value['content']['#options']['attributes']['class']))
                $value['content']['#options']['attributes']['class'] = [];
              $value['content']['#options']['attributes']['class'] += $value['attributes']->toArray()["class"];
            }
            else
              $value['content']['#options']['attributes']->merge($value['attributes']);
          }
          else {
            $value['content']['#options']['attributes'] = $value['attributes']->toArray();
          }
        }
      }
  }
  /**
   * for node link
   */
  elseif (isset($variables['element']['#field_name']) && $variables['element']['#field_name'] == 'node_link') {
    foreach ($variables['items'] as $key => $value) {
      $variables['items'][$key]['attributes']->addClass('btn');
      $variables['items'][$key]['attributes']->addClass('btn-outline-danger');
    }
  }
}

/**
 * implement hook_preprocess_image
 *
 * @param int $variables
 */
function wb_universe_preprocess_image(&$variables) {
  $variables["attributes"]['class'][] = 'img-fluid';
}

/**
 * On verra le comportement de la page title.
 *
 * @param
 *        $variables
 */
// function wb_universe_preprocess_page_title(&$variables) {
// if (is_array($variables["title"]) && empty($variables["title"]["#markup"])) {
// $variables["title"]["#printed"] = false;
// }
// }

/**
 * implemente hook_theme_suggestions_HOOK_alter
 * à voir
 *
 * @param int $suggestions
 * @param int $variables
 * @param int $hook
 */
// function wb_universe_theme_suggestions_links_alter(array &$suggestions, array
// $variables) {
// if (!empty($variables['links']['node-readmore'])) {
// $suggestions[] = 'links__node_readmore';
// $suggestions[] = 'links__node_' .
// $variables['links']['node-readmore']['url']->getOption('entity')->getType();
// }
// }

// /**
// * implemente hook_theme_suggestions_HOOK_alter
// * à voir si on peut faire mieux.
// * @param array $suggestions
// * @param array $variables
// */
// function wb_universe_theme_suggestions_form_element_alter(array
// &$suggestions, array $variables) {
// // on verifie s'il ya une demande de surchage
// if (!empty($variables['element']['#attributes']['data-twig'])) {
// $suggestions[] = 'form_element__' .
// $variables['element']['#attributes']['data-twig'];
// }
// elseif (!empty($variables['element']['#type'])) {
// $suggestions[] = 'form_element__' . $variables['element']['#type'];
// }
// }

/**
 * àvoir
 *
 * @param string $form
 * @param string $form_state
 */
// function wb_universe_form_system_theme_settings_alter(&$form,
// \Drupal\Core\Form\FormStateInterface &$form_state, $form_id = NULL) {
// if (isset($form_id)) {
// return;
// }

// // MdbootstrapWbu::defineSetting($form, $form_state);
// $form['google-analytics-gtag'] = [
// '#type' => 'textfield',
// '#title' => 'Google Analytics (id de mesure)',
// '#default_value' => theme_get_setting('google-analytics-gtag'),
// '#weight' => -40
// ];
// }



